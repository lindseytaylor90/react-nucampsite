[{"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"2","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"3","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"8","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"9","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"11","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"12","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"13","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"14","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"15","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"17","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"18","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"19","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"20","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"21","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"22","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"23","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js":"24","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":696,"mtime":1612295828626,"results":"26","hashOfConfig":"27"},{"size":539,"mtime":1613254083407,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1611701337727,"results":"29","hashOfConfig":"27"},{"size":2036,"mtime":1613699690485,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1612318249248,"results":"31","hashOfConfig":"27"},{"size":10095,"mtime":1613777442161,"results":"32","hashOfConfig":"27"},{"size":3747,"mtime":1613959033514,"results":"33","hashOfConfig":"27"},{"size":1910,"mtime":1612297138158,"results":"34","hashOfConfig":"27"},{"size":5346,"mtime":1613778489221,"results":"35","hashOfConfig":"27"},{"size":2085,"mtime":1613839620056,"results":"36","hashOfConfig":"27"},{"size":4629,"mtime":1614028092446,"results":"37","hashOfConfig":"27"},{"size":4243,"mtime":1612318273321,"results":"38","hashOfConfig":"27"},{"size":1054,"mtime":1612318289933,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1612318296959,"results":"40","hashOfConfig":"27"},{"size":11036,"mtime":1613959142191,"results":"41","hashOfConfig":"27"},{"size":797,"mtime":1613684787069,"results":"42","hashOfConfig":"27"},{"size":644,"mtime":1613699274851,"results":"43","hashOfConfig":"27"},{"size":623,"mtime":1613505911202,"results":"44","hashOfConfig":"27"},{"size":722,"mtime":1613703488197,"results":"45","hashOfConfig":"27"},{"size":600,"mtime":1613846000514,"results":"46","hashOfConfig":"27"},{"size":591,"mtime":1613844490623,"results":"47","hashOfConfig":"27"},{"size":6356,"mtime":1613958752160,"results":"48","hashOfConfig":"27"},{"size":234,"mtime":1613615562496,"results":"49","hashOfConfig":"27"},{"size":166,"mtime":1613684503164,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1613697972834,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"i163tz",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["109","110"],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],["111","112"],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["113","114","115"],"import React from 'react';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n\nfunction RenderCampSite({campsite}){\n    return (\n        <div className=\"col-md-5 m-1\">\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n            }}>\n                <Card>\n                    <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n                    <CardBody>\n                        <CardText>{campsite.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n    </div>\n    );\n}\n\nfunction RenderComments({comments, postComment, campsiteId }) {\n    if(comments){\n        return (\n            <div className=\"col-md-5 m-1\">\n                <h4>Comments</h4>\n                <Stagger in>\n                    {comments.map(c => {\n                        return(\n                            <Fade in key={c.id}>\n                                <div>\n                                    <p>{c.text}</p>\n                                    <p>\n                                        {c.author},\n                                        {\" \"+ new Intl.DateTimeFormat(\n                                            'en-US', \n                                            { \n                                                year: 'numeric', \n                                                month: 'short', \n                                                day: '2-digit'\n                                            }\n                                            ).format(new Date(Date.parse(c.date)))}\n                                    </p>\n                                </div>\n                            </Fade>\n                    );\n                })}\n                </Stagger>\n                <CommentForm  campsiteId={campsiteId} postComment={postComment}/>\n            </div>\n        );\n    }\n    return <div/>\n}\n\n        function CampsiteInfo(props) {\n            if (props.isLoading) {\n                return (\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <Loading />\n                        </div>\n                    </div>\n                );\n            }\n            if (props.errMess) {\n                return (\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h4>{props.errMess}</h4>\n                            </div>\n                        </div>\n                    </div>\n                );\n            }\n            \n        if (props.campsite) {\n            return (\n                <div className=\"container\">\n                <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>{props.campsite.name}</h2>\n                    <hr />\n                 </div>\n            </div>\n                    <div className=\"row\">\n                        <RenderCampSite campsite={props.campsite} />\n                        <RenderComments \n                        comments={props.comments} \n                        postComment={props.postComment}\n                        campsiteId={props.campsite.id}\n                        />\n                    </div>\n                </div>\n            );\n        } \n        return <div/>;\n    }\n\n    const required = val => val && val.length;\n    const maxLength = len => val => !val || (val.length <= len);\n    const minLength = len => val => val && (val.length >= len);\n\n    class CommentForm extends React.Component{\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                isModalOpen: false\n            }\n            this.toggleModal = this.toggleModal.bind(this);\n            this.handleSubmit = this.handleSubmit.bind(this);\n        }\n            \n        handleSubmit(values){\n            this.toggleModal();\n            this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\n        }\n\n        toggleModal() {\n            console.log( \"state = \", this.state );\n            this.setState({\n                isModalOpen: !this.state.isModalOpen\n            });\n        }\n        \n\n        render(){\n            return (\n                    <div>\n                        <Button outline onClick={this.toggleModal}>\n                        <i className=\"fa fa-pencil fa-lg\"/>Submit Comment\n                        </Button>\n                        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>  \n                        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                        <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"rating\" md={2}>Rating</Label>\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                        placeholder=\"Rating\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                        }}\n                                    >\n                                        <option>Please Select a Rating</option>\n                                        <option value=\"1\">1</option>\n                                        <option value=\"2\">2</option>\n                                        <option value=\"3\">3</option>\n                                        <option value=\"4\">4</option>\n                                        <option value=\"5\">5</option>\n                                    </Control.select>\n                                      <Errors\n                                        className=\"text-danger\"\n                                        model=\".rating\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                        }}\n                                        />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"author\" md={2}>Your Name</Label>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength:maxLength(15)\n                                        }}\n                                    />\n                                      <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                        />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\" md={2}>Comment</Label>\n                                    <Control.textarea model=\".text\" id=\"text\" name=\"text\"\n                                            rows=\"6\"\n                                            className=\"form-control\"\n                                        />\n                                      <Errors\n                                        className=\"text-danger\"\n                                        model=\".text\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                            </div>\n                            \n                            <div className=\"form-group\">\n                                <div md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                                </div>\n                            </div>\n                        </LocalForm>\n                        </ModalBody>\n                    </Modal>\n                </div>\n            )\n        }\n    }\n\nexport default CampsiteInfo;","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],["116","117"],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],["118","119"],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["120","121","122","123","124","125","126"],"import React, {Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col,Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n class Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum:'',\n            email: '',\n            agree: false,\n            contactType:'By Phone',\n            feedback:'',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false, \n                email: false\n            }\n        };\n\n        this.hadleSubmit = this.handleSubmit.bind(this); \n    }\n    \n\n    handleSubmit(values) {\n        //console.log('Current State is: ' + JSON.stringify(values));\n        //alert('Current State is: ' + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n        this.props.postFeedback(values);\n    }\n\n    render(){\n            \n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                    <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                           required, \n                                           minlength: minLength(2),\n                                           maxLength:maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                      className=\"text-danger\"\n                                      model=\".firstName\"\n                                      show=\"touched\"\n                                      component=\"div\"\n                                      messages={{\n                                          required: 'Required',\n                                          minLength: 'Must be at least 2 characters',\n                                          maxLength: 'Must be 15 characters or less'\n                                      }}\n                                      />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength:maxLength(15)\n                                        }}\n                                    />\n                                      <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                        />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(10),\n                                            maxLength:maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                      <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                      <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n} \n    \n \n\n\nexport default Contact;","/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js",[],"/Users/TaylorLindsey/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js",[],["127","128"],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"129","replacedBy":"133"},{"ruleId":"131","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":152,"column":37,"nodeType":"137","endLine":158,"endColumn":38},{"ruleId":"135","severity":1,"message":"138","line":178,"column":37,"nodeType":"137","endLine":186,"endColumn":39},{"ruleId":"135","severity":1,"message":"139","line":201,"column":37,"nodeType":"137","endLine":204,"endColumn":43},{"ruleId":"129","replacedBy":"140"},{"ruleId":"131","replacedBy":"141"},{"ruleId":"129","replacedBy":"142"},{"ruleId":"131","replacedBy":"143"},{"ruleId":"135","severity":1,"message":"138","line":83,"column":37,"nodeType":"137","endLine":91,"endColumn":39},{"ruleId":"135","severity":1,"message":"138","line":108,"column":37,"nodeType":"137","endLine":116,"endColumn":39},{"ruleId":"135","severity":1,"message":"138","line":133,"column":37,"nodeType":"137","endLine":142,"endColumn":39},{"ruleId":"135","severity":1,"message":"138","line":160,"column":37,"nodeType":"137","endLine":167,"endColumn":39},{"ruleId":"135","severity":1,"message":"144","line":184,"column":45,"nodeType":"137","endLine":188,"endColumn":47},{"ruleId":"135","severity":1,"message":"136","line":194,"column":37,"nodeType":"137","endLine":195,"endColumn":66},{"ruleId":"135","severity":1,"message":"139","line":204,"column":37,"nodeType":"137","endLine":207,"endColumn":39},{"ruleId":"129","replacedBy":"145"},{"ruleId":"131","replacedBy":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],["147"],["148"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["147"],["148"],["147"],["148"],"Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["147"],["148"],"no-global-assign","no-unsafe-negation"]